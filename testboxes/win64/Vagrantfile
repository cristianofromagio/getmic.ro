# -*- mode: ruby -*-
# vi: set ft=ruby :

$installChocolateyCygwin = <<-'SCRIPT'
  $ErrorActionPreference = "Stop"
  iex (wget 'https://chocolatey.org/install.ps1' -UseBasicParsing)
  choco feature disable --name showDownloadProgress
  choco install cygwin --params "/NoStartMenu" --force -y
SCRIPT

# $installSsh = <<-'SCRIPT'
#   Write-Host "Enable Developer Mode"
#   # Create AppModelUnlock if it doesn't exist, required for enabling Developer Mode
#   $RegistryKeyPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock"
#   if (-not(Test-Path -Path $RegistryKeyPath)) {
#     New-Item -Path $RegistryKeyPath -ItemType Directory -Force
#   }

#   # Add registry value to enable Developer Mode
#   New-ItemProperty -Path $RegistryKeyPath -Name AllowDevelopmentWithoutDevLicense -PropertyType DWORD -Value 1

#   $cap = Get-WindowsCapability -Online | ? Name -like "OpenSSH.Server*"
#   if (($cap.count -ne 0) -and ($cap[0].State -ne "Installed")) {
#     Write-Host "Install OpenSSH Server"
#     # Install the OpenSSH Server
#     Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
#     # Install the OpenSSHUtils helper module, which is needed to fix the ACL for ths host keys.
#     # Install-Module -Force OpenSSHUtils

#     Write-Host "Enable OpenSSH Server"
#     Start-Service sshd

#     Write-Host "Open OpenSSH Server port on firewall"
#     # Open firewall port
#     New-NetFirewallRule -Protocol TCP -LocalPort 22 -Direction Inbound -Action Allow -DisplayName SSH
#   }
# SCRIPT

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "StefanScherer/windows_10"
  config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true

  config.vm.hostname = "win10"
  config.vm.communicator = "winssh"
  config.winssh.shell = "powershell"

  config.winrm.username = "vagrant"
  config.winrm.password = "vagrant"
  config.winrm.timeout = 180

  config.vm.guest = :windows
  config.windows.halt_timeout = 15

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false

    # Customize the amount of memory on the VM:
    vb.memory = '2048'
    vb.cpus = 1
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   $ErrorActionPreference = "Stop"
  #   iex (wget 'https://chocolatey.org/install.ps1' -UseBasicParsing)
  #   choco feature disable --name showDownloadProgress
  #   choco install curl --force -y
  #   choco install cygwin --params "/NoStartMenu" --force -y
  #   refreshenv
  # SHELL

  # config.vm.provision "shell" do |s|
  #   s.privileged = "true"
  #   s.inline = $installSsh
  # end
  config.vm.provision "shell" do |s|
    s.privileged = "true"
    s.inline = $installChocolateyCygwin
  end
end
